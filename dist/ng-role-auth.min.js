!function(){function a(a,b){a.$on("$routeChangeStart",b.onChange)}var b=document.createElement("style");b.type="text/css",b.innerHTML=".nra-hide { display: none !important; }",document.getElementsByTagName("head")[0].appendChild(b);var c=angular.module("ngRoleAuth",[]);c.constant("NRA_MSG",{accessDenied:"nra.access_denied"}),c.run(["$rootScope","AuthService",a])}(),function(){function a(a,c){function d(d,e){function f(){c.isAuthorized(d.authorized)?g&&(e.removeClass("nra-hide"),g=!1):g||(e.addClass("nra-hide"),g=!0)}var g=(e.parent(),!1);f(),a(f,b)}var e={restrict:"A",scope:{authorized:"=nraAuth"},link:d};return e}var b=5e3;angular.module("ngRoleAuth").directive("nraAuth",["$interval","AuthService",a])}(),function(){function a(a,b,c,d,e){var f=this;this.getRole=function(){return null},this.isAuthorized=function(a){"string"==typeof a&&(a=[a]);var b=f.getRole();"string"==typeof b&&(b=[b]);var c=!0;if(a[0]){c=!1;for(var d=0;d<b.length;d++)if(-1!==a.indexOf(b[d])){c=!0;break}}return c},this.onChange=function(g,h,i){var j=h.$$route&&h.$$route.authorized?h.$$route.authorized:[];if(!f.isAuthorized(j)&&(a.$broadcast(e.accessDenied,h.$$route?h.$$route.originalPath:""),console.error("Access denied on unauthorized root:",h.$$route?h.$$route.originalPath:""),console.error("Reloading..."),g.preventDefault(),d.location.reload(),!i)){var k="/";b.routes[null]&&(k=b.routes[null].redirectTo),c.path(k).replace()}}}angular.module("ngRoleAuth").service("AuthService",["$rootScope","$route","$location","$window","NRA_MSG",a])}();