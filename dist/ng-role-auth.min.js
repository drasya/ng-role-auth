!function(){function a(a,b){a.$on("$routeChangeStart",b.onChange)}var b=angular.module("ngRoleAuth",[]);b.constant("NRA_MSG",{accessDenied:"nra.access_denied"}),b.run(["$rootScope","AuthService",a])}(),function(){function a(a,c){function d(d,e){function f(){console.log("auth:",d.authorized),c.isAuthorized(d.authorized)?h&&(g.append(e),h=!1):h||(e.remove(),h=!0)}var g=e.parent(),h=!1;f(),a(f,b)}var e={restrict:"A",scope:{authorized:"=nraAuth"},link:d};return e}var b=5e3;angular.module("ngRoleAuth").directive("nraAuth",["$interval","AuthService",a])}(),function(){function a(a,b){var c=this;this.getRole=function(){return null},this.isAuthorized=function(a){"string"==typeof a&&(a=[a]);var b=c.getRole();"string"==typeof b&&(b=[b]);var d=!0;if(a[0]){d=!1;for(var e=0;e<b.length;e++)if(-1!==a.indexOf(b[e])){d=!0;break}}return d},this.onChange=function(d,e){var f=e.$$route&&e.$$route.authorized?e.$$route.authorized:[];c.isAuthorized(f)||(a.$broadcast(b.accessDenied,e.$$route?e.$$route.originalPath:""),console.log("Access denied on unauthorized root:",e.$$route?e.$$route.originalPath:""),d.preventDefault())}}angular.module("ngRoleAuth").service("AuthService",["$rootScope","NRA_MSG",a])}();