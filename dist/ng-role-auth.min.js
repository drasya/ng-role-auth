!function(){function a(a,b){a.$on("$routeChangeStart",b.onChange)}var b=angular.module("ngRoleAuth",[]);b.constant("NRA_MSG",{accessDenied:"nra.access_denied"}),b.run(["$rootScope","AuthService",a])}(),function(){function a(a,c){function d(d,e){function f(){c.isAuthorized(d.authorized)?h&&(g.append(e),h=!1):h||(e.remove(),h=!0)}var g=e.parent(),h=!1;f(),a(f,b)}var e={restrict:"A",scope:{authorized:"=nraAuth"},link:d};return e}var b=5e3;angular.module("ngRoleAuth").directive("nraAuth",["$interval","AuthService",a])}(),function(){function a(a,b,c,d){var e=this;this.getRole=function(){return null},this.isAuthorized=function(a){"string"==typeof a&&(a=[a]);var b=e.getRole();"string"==typeof b&&(b=[b]);var c=!0;if(a[0]){c=!1;for(var d=0;d<b.length;d++)if(-1!==a.indexOf(b[d])){c=!0;break}}return c},this.onChange=function(f,g,h){var i=g.$$route&&g.$$route.authorized?g.$$route.authorized:[];if(!e.isAuthorized(i)&&(a.$broadcast(d.accessDenied,g.$$route?g.$$route.originalPath:""),console.log("Access denied on unauthorized root:",g.$$route?g.$$route.originalPath:""),f.preventDefault(),console.log(b),console.log(b.routes[null]),console.log(h),!h)){var j="/";b.routes[null]&&(j=b.routes[null].redirectTo),c.path(j).replace()}}}angular.module("ngRoleAuth").service("AuthService",["$rootScope","$route","$location","NRA_MSG",a])}();